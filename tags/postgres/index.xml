<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>postgres on Jincheng Li</title>
    <link>http://jincheng.li/tags/postgres/</link>
    <description>Recent content in postgres on Jincheng Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://jincheng.li/tags/postgres/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PostgreSQL Query Optimization</title>
      <link>http://jincheng.li/post/postgres-query-opt/</link>
      <pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://jincheng.li/post/postgres-query-opt/</guid>
      <description>This post gives a high-level explanation of Postgres query optimization. It assumes basic familiarity with relational databases and SQL queries.&#xA;Background PostgreSQL, or Postgres, is an open-source object-relational database management system. It has gone through around 30 years of development, has a ton of features, and is very popular within the database community. This post will focus on its query optimization routines, particularly how it optimizes join queries.&#xA;Query Optimization 101 Query optimization is the process of determining the best evaluation plan for a query, based on a limited amount of information about a database (e.</description>
    </item>
  </channel>
</rss>
